@startuml cleaning_task
skinparam sequenceMessageAlign center
skinparam NoteTextAlignment center
actor Building_Staff
entity Dashboard
entity Robot
database Storage

activate Dashboard
== Task Origination ==
alt Manual Task
    Building_Staff -> Dashboard: Start a Task for Robot
else Scheduled Task from Building \nManager or Field Engineer
    Dashboard -> Dashboard: Begin Robot Task
end

== Task Exectution ==
Dashboard -> Robot: Begin task
activate Robot
loop while Ongoing task
'If-else for task updates
alt No task updates
    'Normal cleaning procedure on parallel
    note across: Normal Cleaning with Dashboard Data Pulls in Parallel to Check\nfor Errors or to Update Displayed Data
    par Normal cleaning
        Robot -> Robot: Do Cleaning\ntask
        Robot -> Robot: Check for Task\nUpdates or Issues
        Robot -> Storage: Send Robot Data
    else Sharing robot data
    alt Normal Robot Data\nRecieved in 30s
        Dashboard -> Robot: Get Robot Data
        Robot --> Dashboard: Updated Data
        Dashboard -> Dashboard: Update Task Data
        Dashboard -> Storage: Store Task Data\t\t\t\t
        Dashboard -> Dashboard: Update Task Data\non Display
        ... 2s Delay ...
    else Faulty or No Robot Data
        alt Error Message \nRecieved
        Robot -> Dashboard: Error Message
        else No \nData
        ... 30s wait ...
        end
        Dashboard -> Storage: Get Last Recorded\t\t\t\nRobot Data\t\t
        Storage --> Dashboard: Last Robot Data\t\t\t
        Dashboard -> Building_Staff: Robot Connection\nError Notification
        note over Building_Staff, Dashboard: Also Send Error to Building Manager\nand/or Field Engineer if Relevant 
        loop Until Response \nfrom Robot or Staff
            Dashboard -> Robot: Get Robot Data
            Dashboard -> Building_Staff: Request Task Update\non Dashboard

    end 
    end
note across: Alternative Flows for Critical Robot Status like Low Water or Full Trash,\nTask Updates, and Task Completion
else Robot Status Issue
    Robot -> Dashboard: Critical Robot Status
    Robot -> Robot: Go to Docking \nStation
    Dashboard -> Building_Staff: Status Notification

else Task update from Building_Staff
    Building_Staff -> Dashboard: Update Task
    Dashboard -> Robot: Add Higher Priority Task

else All Tasks Completed
    Robot -> Dashboard: Tasks Completed Message \nand Robot Status
    Robot -> Robot: Go to Docking \nStation
    Dashboard -> Building_Staff: Completion Notification \nand Robot Status

deactivate Robot
deactivate Dashboard

end
end
end

@enduml